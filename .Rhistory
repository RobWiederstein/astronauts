a1      texas    3        3        ben        Z1
a1      texas    4        5        peter      Z5
a2      calif    1        25       esther     Z3
a2      calif    2        5        peggy      Z2
a2      calif    3        10       greg       Z5)
?read.txt
file <- "./so_question.txt"
scan(file = file)
readLines(file = file)
?readLines
con <- "./so_question.txt"
readLines(con = con)
a <- readLines(con = con)
a[1]
str_split(a)
str_split(a, pattern = " ")
str_split(a, pattern = "\\s")
str_split(a, pattern = "\\s+")
readLines(con = con) %>%
str_split(a, pattern = "\\s+")
readLines(con = con) %>%
str_split(pattern = "\\s+")
readLines(con = con) %>%
str_split(pattern = "\\s+") %>%
data.frame(stringsAsFactors = F)
readLines(con = con) %>%
str_split(pattern = "\\s+") %>%
do.call(rbind())
readLines(con = con) %>%
str_split(pattern = "\\s+") %>%
rbind(do.call())
readLines(con = con) %>%
str_split(pattern = "\\s+") %>%
tibble()
readLines(con = con) %>%
str_split(pattern = "\\s+") %>%
con <- "./so_question.txt"
readLines(con = con) %>%
str_split(pattern = "\\s+") %>%
library(magrittr)
readLines(con = con) %>%
str_split(pattern = "\\s+") %>%
readLines(con = con) %>%
str_split(pattern = "\\s+") #%>%
readLines(con = con) %>%
str_split(pattern = "\\s+") %>%
tibble()
readLines(con = con) %>%
str_split(pattern = "\\s+") %>%
unlist()
readLines(con = con) %>%
str_split(pattern = "\\s+") %>%
unlist() %>%
matrix(ncol = 6)
readLines(con = con) %>%
str_split(pattern = "\\s+") %>%
unlist() %>%
matrix(ncol = 6, byrow = T)
con <- "./so_question.txt"
df <- readLines(con = con) %>%
str_split(pattern = "\\s+") %>%
unlist() %>%
matrix(ncol = 6, byrow = T)
df <- readLines(con = con) %>%
str_split(pattern = "\\s+") %>%
unlist() %>%
matrix(ncol = 6, byrow = T) %>%
tibble()
df <- readLines(con = con) %>%
str_split(pattern = "\\s+") %>%
unlist() %>%
matrix(ncol = 6, byrow = T) %>%
dataframe()
df <- readLines(con = con) %>%
str_split(pattern = "\\s+") %>%
unlist() %>%
matrix(ncol = 6, byrow = T) %>%
data.frame()
df <- readLines(con = con) %>%
str_split(pattern = "\\s+") %>%
unlist() %>%
matrix(ncol = 6, byrow = T) %>%
as_tibble()
?as.tibble
df <- readLines(con = con) %>%
str_split(pattern = "\\s+") %>%
unlist() %>%
matrix(ncol = 6, byrow = T) %>%
as_tibble(header = T)
con <- "./so_question.txt"
df <- readLines(con = con) %>%
str_split(pattern = "\\s+") %>%
unlist() %>%
matrix(ncol = 6, byrow = T) %>%
as_tibble(header = T)
df <- readLines(con = con) %>%
str_split(pattern = "\\s+") %>%
unlist() %>%
matrix(ncol = 6, byrow = T) %>%
as.data.frame(header = T)
df <- readLines(con = con) %>%
str_split(pattern = "\\s+") %>%
unlist() %>%
matrix(ncol = 6, byrow = T) %>%
as_tibble(header = T)
df <- readLines(con = con) %>%
str_split(pattern = "\\s+") %>%
unlist() %>%
matrix(ncol = 6, byrow = T) %>%
as_tibble()
colnames(df)
colnames(df) <- df[1, ]
df <- df[-1, ]
View(df)
df %>% select(session, weight, sequence, INDIVIDUAL) %>%
inner_join(., select(., session, INDIVIDUAL), by = "session") %>%
rename(INDIVIDUAL1 = INDIVIDUAL.x, INDIVIDUAL2 = INDIVIDUAL.y) %>%
filter(INDIVIDUAL1 != INDIVIDUAL2) %>%
unique %>%
arrange(session, sequence)
df %>% select(session, weight, sequence, INDIVIDUAL) #%>%
df %>% select(session, weight, sequence, INDIVIDUAL) %>%
inner_join(., select(., session, INDIVIDUAL), by = "session") #%>%
df %>% select(session, weight, sequence, INDIVIDUAL) %>%
inner_join(., select(., session, INDIVIDUAL), by = "session") %>%
rename(INDIVIDUAL1 = INDIVIDUAL.x, INDIVIDUAL2 = INDIVIDUAL.y) #%>%
df %>% select(session, weight, sequence, INDIVIDUAL) %>%
inner_join(., select(., session, INDIVIDUAL), by = "session") %>%
rename(INDIVIDUAL1 = INDIVIDUAL.x, INDIVIDUAL2 = INDIVIDUAL.y) %>%
filter(INDIVIDUAL1 != INDIVIDUAL2) %>%
unique %>%
arrange(session, sequence)
df %>% select(session, weight, sequence, INDIVIDUAL) %>%
inner_join(., select(., session, INDIVIDUAL), by = "session") %>%
rename(INDIVIDUAL1 = INDIVIDUAL.x, INDIVIDUAL2 = INDIVIDUAL.y) %>%
dplyr::filter(INDIVIDUAL1 != INDIVIDUAL2) %>%
unique %>%
arrange(session, sequence)
df <- tibble(astronaut = c("a", "a", "b", "c"),
flights = c("flight1", "flight2", "flight2", "flight3" ),
n = 1)
View(df)
df %>%  inner_join(., select(., flights, astronaut), by = "flights") #%>%
df <- tibble(astronaut = c("a", "a", "b", "c"),
flights = c("flight1", "flight2", "flight2", "flight3" )
)
df %>%  inner_join(., select(., flights, astronaut), by = "flights") #%>%
df %>%  inner_join(., select(., flights, astronaut), by = "flights") %>%
rename(astronaut1 = astronaut.x, astronaut2 = astronaut.y) #%>%
df %>%  inner_join(., select(., flights, astronaut), by = "flights") %>%
rename(astronaut1 = astronaut.x, astronaut2 = astronaut.y) %>%
dplyr::filter(astronaut1 != astronaut2) %>%
unique %>%
arrange(flights)
df <- tibble(astronaut = c("a", "a", "b", "c"),
flights = c("flight1", "flight2", "flight2", "flight3" ),
n = 1)
df %>%  inner_join(., select(., flights, astronaut), by = "flights") %>%
rename(astronaut1 = astronaut.x, astronaut2 = astronaut.y) %>%
dplyr::filter(astronaut1 != astronaut2) %>%
unique %>%
arrange(flights)
View(df)
df <- tibble(astronaut = c("a", "a", "b", "c", "d", "d", "d", "d"),
flights = c("flight1", "flight2", "flight2", "flight3",
"flight2", "flight3", "flight4", "flight5"),
n = 1)
df %>%  inner_join(., select(., flights, astronaut), by = "flights") %>%
rename(astronaut1 = astronaut.x, astronaut2 = astronaut.y) %>%
dplyr::filter(astronaut1 != astronaut2) %>%
unique %>%
arrange(flights)
df %>%  inner_join(., select(., flights, astronaut), by = "flights") %>%
rename(astronaut1 = astronaut.x, astronaut2 = astronaut.y) %>%
dplyr::filter(astronaut1 != astronaut2) %>%
unique %>%
select(astronaut1, astronaut2, flights, n) %>%
arrange(flights)
df.1 <- df %>%
inner_join(., select(., flights, astronaut), by = "flights") %>%
rename(astronaut1 = astronaut.x, astronaut2 = astronaut.y) %>%
dplyr::filter(astronaut1 != astronaut2) %>%
unique %>%
select(astronaut1, astronaut2, flights, n) %>%
arrange(flights)
?facet_wrap
?facet_grid
df4 <- dplyr::select_if(df, is.numeric)
x <- c("igraph", "dplyr", "magrittr")
sapply(x, library, character.only = T)
input <- "./data/astronauts.csv"
df <- data.table::fread(input = input)
df.na <- df[!complete.cases(df), ]
df.na
Amelia::missmap(df.na)
rev(sort(apply(df, 2, function(x) length(unique(x)))))
class(df$id)
table(unlist(lapply(df, class)))
my.summary <- do.call(cbind, lapply(df, summary, digits = 2))
my.summary
df2 <- df[, c(2, 4)] #subset main df to just names and number
df2 <- dplyr::distinct(df2) #filter to unique/distinct values 564
length(unique(df2$name)) #564 astronauts
length(unique(df2$number))#564 unique numbers
#one astronaut is included in the names column twice--it is the same person
duplicate.name <- df2$name[duplicated(df2$name)] #"Aleksandrov, Aleksandr"
df2[grep("Aleksandrov, Aleksandr", df2$name)]
#two astronauts have the same number
duplicate.number <- df2$number[duplicated(df2$number)]
df[which(df$number == duplicate.number)]
df3 <- dplyr::select_if(df, is.numeric)
df3 <- dplyr::select(df3, -id, -number, -mission_number)
res <- cor(df3)
res <- round(res, 2)
library(corrplot)
col<- colorRampPalette(c("blue", "white", "red"))(20)
heatmap(x = res, col = col,
symm = TRUE,
margins = c(5, 5),
main = "Numeric Astonaut Variables")
df4 <- dplyr::select_if(df, is.numeric)
df4 <- tidyr::gather(df4)
library(ggplot2)
p <- ggplot(df4, aes(value))
p <- p + geom_histogram()
p <- p + facet_wrap(vars(key))
p
p <- ggplot(df4, aes(value))
p <- p + geom_boxplot()
p <- p + facet_wrap(vars(key))
p
p <- ggplot(df4, aes(value, group = key))
p <- p + geom_boxplot()
p
p <- ggplot(df4, aes(value, group = key, colour = key))
p <- p + geom_boxplot()
p
df4 <- dplyr::select(df4, -id, -mission_number, -number)
df4 <- tidyr::gather(df4)
df4 <- dplyr::select(df4, -id, -mission_number, -number)
df4 <- dplyr::select_if(df, is.numeric)
df4 <- dplyr::select(df4, -id, -mission_number, -number)
df4 <- tidyr::gather(df4)
library(ggplot2)
p <- ggplot(df4, aes(value, group = key, colour = key))
p <- p + geom_boxplot()
p
df4 <- dplyr::select_if(df, is.numeric)
df4 <- dplyr::select(df4, hours_mission, total_hrs_sum)
df4 <- tidyr::gather(df4)
library(ggplot2)
p <- ggplot(df4, aes(value, group = key, colour = key))
p <- p + geom_boxplot()
p
df$age <- df$year_of_mission - df$year_of_birth
plot(df$age)
p <- p + geom_histogram()
p
df$age <- df$year_of_mission - df$year_of_birth
p <- ggplot(df, aes(age))
p <- p + geom_histogram()
p
p <- ggplot(df, aes(age))
p <- p + geom_histogram(binwidth = 10)
p
p <- ggplot(df, aes(age))
p <- p + geom_histogram(binwidth = 1)
p
df5 <-
df %>%
select(age, sex, nationality) %>%
gather(key = key, value = value, -age)
View(df5)
View(df5)
p <- ggplot(df5, aes(age, group = key))
p <- p + geom_histogram(binwidth = 1)
p
df5 <-
df %>%
select(age, sex, nationality) %>%
gather(key = key, value = value)
df5 <-
df %>%
select(age, sex, nationality) %>%
gather(key = key, value = value, -age)
p <- ggplot(df5, aes(age, group = value))
p <- p + geom_histogram(binwidth = 1)
p
p <- ggplot(df5, aes(age, group = value, colour = value))
p <- p + geom_histogram(binwidth = 1)
p
p <- ggplot(dplyr::filter(df5, key = sex), aes(age, group = value, colour = value))
p <- p + geom_histogram(binwidth = 1)
p
df5 <-
df %>%
select(age, sex) %>%
gather(key = key, value = value, -age)
p <- ggplot(df5, aes(age, group = value, colour = value))
p <- p + geom_histogram(binwidth = 1)
p
p <- ggplot(df5, aes(age))
p <- p + geom_histogram(binwidth = 1)
p <- p + facet_grid(. ~ value)
p
df5 <-
df %>%
group_by(name) %>%
select(age, sex) %>%
gather(key = key, value = value, -age)
df5 <-
df %>%
group_by(., name) %>%
select(age, sex) %>%
gather(key = key, value = value, -age)
df5 <-
df %>%
group_by(number) %>%
select(age, sex) %>%
gather(key = key, value = value, -age)
p <- ggplot(df5, aes(age))
p <- p + geom_histogram(binwidth = 1)
p <- p + facet_grid(. ~ value)
p
df5 <-
df %>%
group_by(name) %>%
select(age, sex) %>%
gather(key = key, value = value, -age)
View(df5)
df5 <-
df %>%
select(name, age, sex)
View(df5)
p <- p + facet_grid(. ~ sex)
p
p <- ggplot(df5, aes(age))
p <- p + geom_histogram(binwidth = 1)
p <- p + facet_grid(. ~ sex)
p
df5 <-
df %>%
select(name, age, sex) %>%
group_by(sex) %>%
summarize(avg = mean(age, na.rm = T))
View(df5)
df5 <-
df %>%
select(name, age, sex) %>%
group_by(sex) %>%
summarize(avg = mean(age, na.rm = T), .groups = T)
df5 <-
df %>%
select(name, age, sex) %>%
group_by(sex) %>%
summarize(avg = mean(age, na.rm = T), .groups = "keep")
View(df5)
p
df5 <-
df %>%
select(name, age, sex)
p <- ggplot(df5, aes(age))
p <- p + geom_histogram(binwidth = 1)
p <- p + facet_grid(. ~ sex)
p
heatmap(x = res, col = col,
symm = TRUE,
margins = c(10, 10),
main = "Numeric Astonaut Variables")
df6 <-
df %>%
filter(nationality %in% c("U.S.S.R/Russia", "U.S."))
df6 <-
df %>%
dplyr::filter(nationality %in% c("U.S.S.R/Russia", "U.S."))
df6 <-
df %>%
dplyr::filter(nationality %in% c("U.S.S.R/Russia", "U.S.")) %>%
group_by(year_of_mission, nationality) %>%
summarize(flights = sum(age))
View(df6)
df$num <- 1
df6 <-
df %>%
dplyr::filter(nationality %in% c("U.S.S.R/Russia", "U.S.")) %>%
group_by(year_of_mission, nationality) %>%
summarize(flights = sum(num))
View(df6)
View(df6)
p <- ggplot(df6, aes(year, flights, group = nationality, color = nationality))
p <- p + geom_line()
p
p <- ggplot(df6, aes(year, flights, group = nationality, color = nationality))
p <- p + geom_line()
p
p <- ggplot(df6, aes(year_of_mission, flights, group = nationality, color = nationality))
p <- p + geom_line()
p
colnames(df6)
colnames(df6)[1] <- "year"
p <- ggplot(df6, aes(year, flights, group = nationality, color = nationality))
p <- p + geom_line()
p
p <- ggplot(df6, aes(year, flights, group = nationality, color = nationality))
p <- p + geom_line()
p <- p + ggtitle("Flights Per Year by Nationality /n", range(df6$year))
p
range(df6$year)
p <- ggplot(df6, aes(year, flights, group = nationality, color = nationality))
p <- p + geom_line()
p <- p + ggtitle(paste("Flights Per Year by Nationality /n", range(df6$year), sep = ""))
p
p <- ggplot(df6, aes(year, flights, group = nationality, color = nationality))
p <- p + geom_line()
p <- p + ggtitle(paste("Flights Per Year by Nationality /n 1961 - 2019"))
p
p <- ggplot(df6, aes(year, flights, group = nationality, color = nationality))
p <- p + geom_line()
p <- p + ggtitle(paste("Flights Per Year by Nationality/n1961 - 2019"))
p
p <- ggplot(df6, aes(year, flights, group = nationality, color = nationality))
p <- p + geom_line()
p <- p + geom_point(size = 2)
p <- p + ggtitle(paste("Annual Flights U.S. v. Russia 1961 - 2019"))
p
p <- ggplot(df6, aes(year, flights, group = nationality, color = nationality))
p <- p + geom_line()
p <- p + geom_point(size = 1)
p <- p + ggtitle(paste("Annual Flights U.S. v. Russia 1961 - 2019"))
p
View(df)
df7 <-
df %>%
select(name, nationality, year_of_birth, total_hrs_sum) %>%
arrange(total_hrs_sum) %>%
slice_head(10)
?slice
df7 <-
df %>%
select(name, nationality, year_of_birth, total_hrs_sum) %>%
arrange(total_hrs_sum) %>%
slice_head(1:10)
df7 <-
df %>%
select(name, nationality, year_of_birth, total_hrs_sum) %>%
arrange(total_hrs_sum)# %>%
slice_head(n = 10)
dplyr::slice_head(n = 10)
df7 <-
df %>%
select(name, nationality, year_of_birth, total_hrs_sum) %>%
arrange(total_hrs_sum) %>%
dplyr::slice_head(n = 10)
View(df7)
df7 <-
df %>%
select(name, nationality, year_of_birth, total_hrs_sum) %>%
arrange(-total_hrs_sum) %>%
dplyr::slice_head(n = 10)
View(df7)
df7 <-
df %>%
select(name, nationality, year_of_birth, total_hrs_sum) %>%
arrange(-total_hrs_sum) %>%
distinct() %>%
dplyr::slice_head(n = 10)
View(df7)
df7 <-
df %>%
select(name, nationality, sex, year_of_birth, total_hrs_sum) %>%
arrange(-total_hrs_sum) %>%
distinct() %>%
dplyr::slice_head(n = 10)
View(df7)
df7 <-
df %>%
select(name, nationality, sex, year_of_birth, total_hrs_sum) %>%
arrange(-total_hrs_sum) %>%
distinct() %>%
dplyr::slice_head(n = 10)
df7 <-
df %>%
select(name, nationality, sex, year_of_birth, total_hrs_sum) %>%
arrange(-total_hrs_sum) %>%
distinct() %>%
dplyr::slice_head(n = 10)
df7
my.summary <- do.call(cbind, lapply(df, summary, digits = 2))
my.summary
my.summary <- do.call(cbind, lapply(df, summary, digits = 2))
my.summary[1:5, 1:5]
par(mar = c(5, 5, 5, 5))
Amelia::missmap(df.na)
?Amelia::mismap
?Amelia::missmap
Amelia::missmap(df.na, margins = c(10, 10))
Amelia::missmap(df.na,
margins = c(10, 10),
main = "Astronauts Missing Data")
?read_csv
rev(sort(apply(df, 2, function(x) length(unique(x)))))
x <- c("igraph", "tidyverse")
sapply(x, library, character.only = T)
input <- "./data/astronauts.csv"
df <- data.table::fread(input = input)
df.na <- df[!complete.cases(df), ]
df.na
Amelia::missmap(df.na,
margins = c(10, 10),
main = "Astronauts Missing Data")
rev(sort(apply(df, 2, function(x) length(unique(x)))))
rev(sort(apply(df, 2, function(x) length(unique(x)))))
